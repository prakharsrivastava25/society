version: '2'
services:

  calvin:
    image: calvin
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: on-failure
    volumes:
      - ./dockerScripts:/temp/scripts
    ports:
      - "3000:3000"
    depends_on:
      - cassandra
      - zookeeper
      - kafka
    entrypoint:
      -  /temp/scripts/wait-for-service.sh
      - '0.0.0.0'
      - '9042'
      - 'npm start'

  counter:
    image: counter
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: on-failure
    volumes:
      - ./dockerScripts:/temp/scripts
    depends_on:
      - cassandra
      - zookeeper
      - kafka
    entrypoint:
      -  /temp/scripts/wait-for-service.sh
      - '0.0.0.0'
      - '2181'
      - 'npm run svc.counter'

  member:
    image: member
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: on-failure
    volumes:
      - ./dockerScripts:/temp/scripts
    depends_on:
      - cassandra
      - zookeeper
      - kafka
    entrypoint:
      -  /temp/scripts/wait-for-service.sh
      - '0.0.0.0'
      - '2181'
      - 'npm run svc.member'

  tool:
    image: tool
    build:
      context: ./
      dockerfile: Dockerfile
    network_mode: host
    restart: on-failure
    volumes:
      - ./dockerScripts:/temp/scripts
    depends_on:
      - cassandra
      - zookeeper
      - kafka
    entrypoint:
      -  /temp/scripts/wait-for-service.sh
      - '0.0.0.0'
      - '2181'
      - 'npm run svc.tool'


  cassandra:
    image: cassandra:latest
    network_mode: host
    restart: on-failure
    expose:
      - 9042

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1,topic3:1:1,topic4:1:1,topic5:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
